import SvgIcon from '@mui/material/SvgIcon'
import { iconRequirements } from '../../themes/commonStyles'
import { iconOffRequirements } from '../../containers/Gurb/gurbTheme'

export const ReceiptIcon = (props) => {
  const { on = true } = props
  return (
    <SvgIcon sx={on ? iconRequirements : iconOffRequirements}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="23"
        height="23"
        viewBox="0 0 23 23"
        fill="none"
      >
        <path
          d="M1.32825 1.00246C1.13302 1.04676 0.995206 1.2223 1.00013 1.42246V16.4112C1.00013 18.1946 1.92708 19.2003 2.83763 19.6531C3.74817 20.1059 4.64888 20.0862 4.64888 20.0862H17.5639V20.0468C17.7657 20.0698 17.9839 20.0862 17.9839 20.0862C17.9839 20.0862 18.7911 20.0911 19.5983 19.6268C20.3858 19.174 21.1618 18.2159 21.1995 16.5556C21.2044 16.5474 21.2093 16.5375 21.2126 16.5293C21.2126 16.5195 21.2126 16.5129 21.2126 16.5031C21.2143 16.4818 21.2143 16.4588 21.2126 16.4375V5.89809C21.2126 5.89316 21.2126 5.88988 21.2126 5.88496C21.2126 5.88496 21.2192 5.39277 20.9633 4.88746C20.7073 4.38215 20.1118 3.83746 19.1783 3.83746V3.82434H15.2014V4.66434H17.5376C17.4868 4.73652 17.4441 4.80215 17.4064 4.87434C17.1504 5.37473 17.1439 5.87184 17.1439 5.87184V16.0568C17.1422 16.2078 17.221 16.3489 17.3522 16.426C17.4835 16.5014 17.6443 16.5014 17.7755 16.426C17.9068 16.3489 17.9855 16.2078 17.9839 16.0568V5.87184C17.9839 5.86035 18.0003 5.55684 18.1545 5.25496C18.312 4.94816 18.5335 4.67746 19.1783 4.67746C19.8214 4.67746 20.0429 4.95473 20.202 5.26809C20.3579 5.57652 20.3858 5.8866 20.3858 5.89809H20.3726V16.4375C20.3726 17.9321 19.7754 18.5621 19.1783 18.905C18.5811 19.2479 17.9839 19.2462 17.9839 19.2462C17.9839 19.2462 17.2735 19.2364 16.5664 18.8787C15.8593 18.5211 15.1751 17.8927 15.1751 16.4112V1.42246C15.1751 1.19113 14.9865 1.00246 14.7551 1.00246H1.42013C1.38896 0.99918 1.35942 0.99918 1.32825 1.00246ZM1.84013 1.84246H14.3351V16.4112C14.3351 17.7926 14.9208 18.6966 15.6083 19.2462H4.64888C4.64396 19.2462 4.64067 19.2462 4.63575 19.2462C4.63575 19.2462 4.45528 19.2479 4.1895 19.2068C4.05661 19.1855 3.90896 19.1511 3.74325 19.1018C3.57755 19.0526 3.3938 18.9919 3.21825 18.905C3.12966 18.8607 3.04107 18.8147 2.95575 18.7606C2.35528 18.3832 1.84013 17.7319 1.84013 16.4112V1.84246ZM3.52013 4.45434C3.2888 4.48715 3.12638 4.70207 3.15919 4.9334C3.192 5.16473 3.40692 5.32715 3.63825 5.29434H11.9201C12.0711 5.29598 12.2122 5.21723 12.2893 5.08598C12.3647 4.95473 12.3647 4.79395 12.2893 4.6627C12.2122 4.53145 12.0711 4.4527 11.9201 4.45434H3.63825C3.62513 4.45434 3.612 4.45434 3.59888 4.45434C3.58575 4.45434 3.57263 4.45434 3.5595 4.45434C3.54638 4.45434 3.53325 4.45434 3.52013 4.45434ZM3.52013 6.13434C3.2888 6.16715 3.12638 6.38207 3.15919 6.6134C3.192 6.84473 3.40692 7.00715 3.63825 6.97434H11.9201C12.0711 6.97598 12.2122 6.89723 12.2893 6.76598C12.3647 6.63473 12.3647 6.47395 12.2893 6.3427C12.2122 6.21145 12.0711 6.1327 11.9201 6.13434H3.63825C3.62513 6.13434 3.612 6.13434 3.59888 6.13434C3.58575 6.13434 3.57263 6.13434 3.5595 6.13434C3.54638 6.13434 3.53325 6.13434 3.52013 6.13434ZM3.717 9.49434C3.48567 9.52715 3.32325 9.74207 3.35607 9.9734C3.38888 10.2047 3.6038 10.3671 3.83513 10.3343H6.68325C6.83419 10.336 6.97528 10.2572 7.05239 10.126C7.12786 9.99473 7.12786 9.83395 7.05239 9.7027C6.97528 9.57145 6.83419 9.4927 6.68325 9.49434H3.83513C3.822 9.49434 3.80888 9.49434 3.79575 9.49434C3.78263 9.49434 3.7695 9.49434 3.75638 9.49434C3.74325 9.49434 3.73013 9.49434 3.717 9.49434ZM8.56013 9.49434C8.3288 9.52715 8.16638 9.74207 8.19919 9.9734C8.232 10.2047 8.44692 10.3671 8.67825 10.3343H11.9201C12.0711 10.336 12.2122 10.2572 12.2893 10.126C12.3647 9.99473 12.3647 9.83395 12.2893 9.7027C12.2122 9.57145 12.0711 9.4927 11.9201 9.49434H8.67825C8.66513 9.49434 8.652 9.49434 8.63888 9.49434C8.62575 9.49434 8.61263 9.49434 8.5995 9.49434C8.58638 9.49434 8.57325 9.49434 8.56013 9.49434ZM3.717 11.1743C3.48567 11.2071 3.32325 11.4221 3.35607 11.6534C3.38888 11.8847 3.6038 12.0471 3.83513 12.0143H6.68325C6.83419 12.016 6.97528 11.9372 7.05239 11.806C7.12786 11.6747 7.12786 11.5139 7.05239 11.3827C6.97528 11.2514 6.83419 11.1727 6.68325 11.1743H3.83513C3.822 11.1743 3.80888 11.1743 3.79575 11.1743C3.78263 11.1743 3.7695 11.1743 3.75638 11.1743C3.74325 11.1743 3.73013 11.1743 3.717 11.1743ZM8.56013 11.1743C8.3288 11.2071 8.16638 11.4221 8.19919 11.6534C8.232 11.8847 8.44692 12.0471 8.67825 12.0143H11.9201C12.0711 12.016 12.2122 11.9372 12.2893 11.806C12.3647 11.6747 12.3647 11.5139 12.2893 11.3827C12.2122 11.2514 12.0711 11.1727 11.9201 11.1743H8.67825C8.66513 11.1743 8.652 11.1743 8.63888 11.1743C8.62575 11.1743 8.61263 11.1743 8.5995 11.1743C8.58638 11.1743 8.57325 11.1743 8.56013 11.1743ZM8.56013 12.7625C8.3288 12.7953 8.16638 13.0102 8.19919 13.2415C8.232 13.4729 8.44692 13.6353 8.67825 13.6025H11.9201C12.0711 13.6041 12.2122 13.5254 12.2893 13.3941C12.3647 13.2629 12.3647 13.1021 12.2893 12.9708C12.2122 12.8396 12.0711 12.7608 11.9201 12.7625H8.67825C8.652 12.7592 8.62575 12.7592 8.5995 12.7625C8.58638 12.7625 8.57325 12.7625 8.56013 12.7625ZM3.717 12.8543C3.48567 12.8871 3.32325 13.1021 3.35607 13.3334C3.38888 13.5647 3.6038 13.7271 3.83513 13.6943H6.68325C6.83419 13.696 6.97528 13.6172 7.05239 13.486C7.12786 13.3547 7.12786 13.1939 7.05239 13.0627C6.97528 12.9314 6.83419 12.8527 6.68325 12.8543H3.83513C3.822 12.8543 3.80888 12.8543 3.79575 12.8543C3.78263 12.8543 3.7695 12.8543 3.75638 12.8543C3.74325 12.8543 3.73013 12.8543 3.717 12.8543ZM8.56013 14.4425C8.3288 14.4753 8.16638 14.6902 8.19919 14.9215C8.232 15.1529 8.44692 15.3153 8.67825 15.2825H11.9201C12.0711 15.2841 12.2122 15.2054 12.2893 15.0741C12.3647 14.9429 12.3647 14.7821 12.2893 14.6508C12.2122 14.5196 12.0711 14.4408 11.9201 14.4425H8.67825C8.652 14.4392 8.62575 14.4392 8.5995 14.4425C8.58638 14.4425 8.57325 14.4425 8.56013 14.4425ZM3.717 14.5343C3.48567 14.5671 3.32325 14.7821 3.35607 15.0134C3.38888 15.2447 3.6038 15.4071 3.83513 15.3743H6.68325C6.83419 15.376 6.97528 15.2972 7.05239 15.166C7.12786 15.0347 7.12786 14.8739 7.05239 14.7427C6.97528 14.6114 6.83419 14.5327 6.68325 14.5343H3.83513C3.822 14.5343 3.80888 14.5343 3.79575 14.5343C3.78263 14.5343 3.7695 14.5343 3.75638 14.5343C3.74325 14.5343 3.73013 14.5343 3.717 14.5343ZM8.56013 16.0175C8.3288 16.0503 8.16638 16.2652 8.19919 16.4965C8.232 16.7279 8.44692 16.8903 8.67825 16.8575H11.9201C12.0711 16.8591 12.2122 16.7804 12.2893 16.6491C12.3647 16.5179 12.3647 16.3571 12.2893 16.2258C12.2122 16.0946 12.0711 16.0158 11.9201 16.0175H8.67825C8.66513 16.0175 8.652 16.0175 8.63888 16.0175C8.62575 16.0175 8.61263 16.0175 8.5995 16.0175C8.58638 16.0175 8.57325 16.0175 8.56013 16.0175ZM3.717 16.2143C3.48567 16.2471 3.32325 16.4621 3.35607 16.6934C3.38888 16.9247 3.6038 17.0871 3.83513 17.0543H6.68325C6.83419 17.056 6.97528 16.9772 7.05239 16.846C7.12786 16.7147 7.12786 16.5539 7.05239 16.4227C6.97528 16.2914 6.83419 16.2127 6.68325 16.2143H3.83513C3.822 16.2143 3.80888 16.2143 3.79575 16.2143C3.78263 16.2143 3.7695 16.2143 3.75638 16.2143C3.74325 16.2143 3.73013 16.2143 3.717 16.2143Z"
          fill="#0B2E34"
        />
      </svg>
    </SvgIcon>
  )
}
export const CreditCardIcon = (props) => {
  const { on = true } = props
  return (
    <SvgIcon sx={on ? iconRequirements : iconOffRequirements}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="23"
        height="22"
        viewBox="0 0 23 22"
        fill="none"
      >
        <g clip-path="url(#clip0_491_4417)">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M0.5 5.5C0.5 4.77065 0.789731 4.07118 1.30546 3.55546C1.82118 3.03973 2.52065 2.75 3.25 2.75H19.75C20.4793 2.75 21.1788 3.03973 21.6945 3.55546C22.2103 4.07118 22.5 4.77065 22.5 5.5V16.5C22.5 17.2293 22.2103 17.9288 21.6945 18.4445C21.1788 18.9603 20.4793 19.25 19.75 19.25H3.25C2.52065 19.25 1.82118 18.9603 1.30546 18.4445C0.789731 17.9288 0.5 17.2293 0.5 16.5V5.5ZM3.25 4.125C2.88533 4.125 2.53559 4.26987 2.27773 4.52773C2.01987 4.78559 1.875 5.13533 1.875 5.5V6.875H21.125V5.5C21.125 5.13533 20.9801 4.78559 20.7223 4.52773C20.4644 4.26987 20.1147 4.125 19.75 4.125H3.25ZM21.125 9.625H1.875V16.5C1.875 16.8647 2.01987 17.2144 2.27773 17.4723C2.53559 17.7301 2.88533 17.875 3.25 17.875H19.75C20.1147 17.875 20.4644 17.7301 20.7223 17.4723C20.9801 17.2144 21.125 16.8647 21.125 16.5V9.625Z"
            fill="black"
          />
          <path
            d="M3.25 13.75C3.25 13.3853 3.39487 13.0356 3.65273 12.7777C3.91059 12.5199 4.26033 12.375 4.625 12.375H6C6.36467 12.375 6.71441 12.5199 6.97227 12.7777C7.23013 13.0356 7.375 13.3853 7.375 13.75V15.125C7.375 15.4897 7.23013 15.8394 6.97227 16.0973C6.71441 16.3551 6.36467 16.5 6 16.5H4.625C4.26033 16.5 3.91059 16.3551 3.65273 16.0973C3.39487 15.8394 3.25 15.4897 3.25 15.125V13.75Z"
            fill="black"
          />
        </g>
        <defs>
          <clipPath id="clip0_491_4417">
            <rect
              width="22"
              height="22"
              fill="white"
              transform="translate(0.5)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}

export const BatteryIcon = (props) => {
  const { on = true } = props
  let sx_values = on ? iconRequirements : iconOffRequirements
  sx_values['padding'] = 0
  return (
    <SvgIcon sx={sx_values}>
    <svg 
      width="40" 
      height="40" 
      viewBox="0 0 40 40" 
      fill="none" 
      xmlns="http://www.w3.org/2000/svg">
      <path d="M31.2008 21.8V18.2M19.2008 23L22.2008 20H16.8008L19.8008 17M13.2008 26H25.2008C26.5263 26 27.6008 24.9255 27.6008 23.6V16.4C27.6008 15.0745 26.5263 14 25.2008 14H13.2008C11.8753 14 10.8008 15.0745 10.8008 16.4V23.6C10.8008 24.9255 11.8753 26 13.2008 26Z" stroke="#0B2E34" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    </SvgIcon>
  )
}
